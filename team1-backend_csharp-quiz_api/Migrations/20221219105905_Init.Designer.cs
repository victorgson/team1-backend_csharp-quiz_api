// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using team1_backend_csharp_quiz_api.Persistance;

#nullable disable

namespace team1backendcsharpquizapi.Migrations
{
    [DbContext(typeof(QuizDatabaseContext))]
    [Migration("20221219105905_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("team1_backend_csharp_quiz_api.Entities.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AnswerString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isCorrectAnswer")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("team1_backend_csharp_quiz_api.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e976d209-eb08-4b45-b2fa-a69263b66c2c"),
                            Category = "Sport",
                            Language = "Swedish",
                            QuestionString = "Fråga 1"
                        },
                        new
                        {
                            Id = new Guid("06472ffa-7fb1-42fa-8cc1-a9c886f150f9"),
                            Category = "Film",
                            Language = "Swedish",
                            QuestionString = "Fråga 2"
                        },
                        new
                        {
                            Id = new Guid("229940ae-eb01-453a-8c87-f96b859d064f"),
                            Category = "Serier",
                            Language = "Swedish",
                            QuestionString = "Fråga 3"
                        });
                });

            modelBuilder.Entity("team1_backend_csharp_quiz_api.Entities.Answer", b =>
                {
                    b.HasOne("team1_backend_csharp_quiz_api.Entities.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
